buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "Minecraft Forge"
            url = "https://maven.minecraftforge.net/"
        }
         maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.1.+') {
            changing = true
        }
    }
}


apply plugin: 'java'
apply plugin: 'forge'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        name = "forge"
        url = "https://maven.minecraftforge.net/"
    }
    maven {
        name = "gt"
        url = "https://gregtech.mechaenetia.com/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
    maven { // the repo from which to get NEI and stuff
        name 'CB Repo'
        url "https://chickenbones.net/maven/"
    }
}


version = project.version
group = project.group
configurations {
    shade
    compile.extendsFrom shade
}

minecraft {
    version = project.minecraft_version + "-" + project.forge_version
    runDir = "run"
}
dependencies {
	// Forcing version numbers for everything and using NO-NEI WAILA since the "transitive dependency resolution (gradle magic)" is currently borked.
    implementation "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    implementation "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
    implementation "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
    implementation "mcp.mobius.waila:Waila:1.5.10_1.7.10:dev"
}

sourceSets {
   main {
     java {
       srcDirs = [ 'src/main' , 'src/API' ]
	   exclude '**/resources/'
     }
	 resources {
       srcDirs = [ 'src/resources' ]
	   exclude '**/API'
	   exclude '**/main'
     }
   }
}
//Creates a compiled de-obfuscated jar
task deobfJar(type: Jar) {
    from sourceSets.main.output
    appendix = 'deobf'
}

//creates a jar containing only the src
task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    appendix = 'src'
}

tasks.build.dependsOn('sourceJar', 'deobfJar')


processResources {
    // This will ensure that this task is redone when the versions change.
    inputs.property "mod_version", project.version
    inputs.property "tfc_version", project.tfc_version
    inputs.property "minecraft_version", project.minecraft.version

    // Replace values in only mcmod.info.
    filesMatching('mcmod.info') {
        // Replace version and mcversion.
        expand 'mod_version':project.version, 'tfc_version': project.tfc_version, 'minecraft_version':project.minecraft.version
    }
}